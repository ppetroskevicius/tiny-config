# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wmenu | xargs swaymsg exec --

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_2048x1536.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
bindsym $mod+q exec swaylock -c 000000
exec swayidle -w \
  timeout 3000 'swaylock -f -c 000000' \
  timeout 3500 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
  before-sleep 'playerctl pause' \
  before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 3000 seconds of inactivity, then turn off
# your displays after another 3500 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
  # Start a terminal
  bindsym $mod+Return exec $term

  # Kill focused window
  bindsym $mod+Shift+q kill

  # Start your launcher
  bindsym $mod+d exec $menu

  # Drag floating windows by holding down $mod and left mouse button.
  # Resize them with right mouse button + $mod.
  # Despite the name, also works for non-floating windows.
  # Change normal to inverse to use left mouse button for resizing and right
  # mouse button for dragging.
  floating_modifier $mod normal

  # Reload the configuration file
  bindsym $mod+Shift+c reload

  # Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
  # Move your focus around
  bindsym $mod+$left focus left
  bindsym $mod+$down focus down
  bindsym $mod+$up focus up
  bindsym $mod+$right focus right
  # Or use $mod+[up|down|left|right]
  bindsym $mod+Left focus left
  bindsym $mod+Down focus down
  bindsym $mod+Up focus up
  bindsym $mod+Right focus right

  # Move the focused window with the same, but add Shift
  bindsym $mod+Shift+$left move left
  bindsym $mod+Shift+$down move down
  bindsym $mod+Shift+$up move up
  bindsym $mod+Shift+$right move right
  # Ditto, with arrow keys
  bindsym $mod+Shift+Left move left
  bindsym $mod+Shift+Down move down
  bindsym $mod+Shift+Up move up
  bindsym $mod+Shift+Right move right
#
# Workspaces:
#
  # Switch to workspace
  bindsym $mod+1 workspace number 1
  bindsym $mod+2 workspace number 2
  bindsym $mod+3 workspace number 3
  bindsym $mod+4 workspace number 4
  bindsym $mod+5 workspace number 5
  bindsym $mod+6 workspace number 6
  bindsym $mod+7 workspace number 7
  bindsym $mod+8 workspace number 8
  bindsym $mod+9 workspace number 9
  bindsym $mod+0 workspace number 10
  # Move focused container to workspace
  bindsym $mod+Shift+1 move container to workspace number 1
  bindsym $mod+Shift+2 move container to workspace number 2
  bindsym $mod+Shift+3 move container to workspace number 3
  bindsym $mod+Shift+4 move container to workspace number 4
  bindsym $mod+Shift+5 move container to workspace number 5
  bindsym $mod+Shift+6 move container to workspace number 6
  bindsym $mod+Shift+7 move container to workspace number 7
  bindsym $mod+Shift+8 move container to workspace number 8
  bindsym $mod+Shift+9 move container to workspace number 9
  bindsym $mod+Shift+0 move container to workspace number 10
  # Note: workspaces can have any name you want, not just numbers.
  # We just use 1-10 as the default.
#
# Layout stuff:
#
  # You can "split" the current object of your focus with
  # $mod+b or $mod+v, for horizontal and vertical splits
  # respectively.
  bindsym $mod+b splith
  bindsym $mod+v splitv

  # Switch the current container between different layout styles
  bindsym $mod+s layout stacking
  bindsym $mod+w layout tabbed
  bindsym $mod+e layout toggle split

  # Make the current focus fullscreen
  bindsym $mod+f fullscreen

  # Toggle the current focus between tiling and floating mode
  bindsym $mod+Shift+space floating toggle

  # Swap focus between the tiling area and the floating area
  bindsym $mod+space focus mode_toggle

  # Move focus to the parent container
  bindsym $mod+a focus parent
#
# Scratchpad:
#
  # Sway has a "scratchpad", which is a bag of holding for windows.
  # You can send windows there and get them back later.

  # Move the currently focused window to the scratchpad
  bindsym $mod+Shift+minus move scratchpad

  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
  # left will shrink the containers width
  # right will grow the containers width
  # up will shrink the containers height
  # down will grow the containers height
  bindsym $left resize shrink width 10px
  bindsym $down resize grow height 10px
  bindsym $up resize shrink height 10px
  bindsym $right resize grow width 10px

  # Ditto, with arrow keys
  bindsym Left resize shrink width 10px
  bindsym Down resize grow height 10px
  bindsym Up resize shrink height 10px
  bindsym Right resize grow width 10px

  # Return to default mode
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# https://manpages.debian.org/experimental/sway/sway-bar.5.en.html
bar {
  position top
  # status_command while date +'%Y-%m-%d %X'; do sleep 1; done

  bar {
    # font pango:DejaVu Sans Mono, Font Awesome 5 Free
    # font pango:Monoid Nerd Font
    font pango:0xProto Nerd Font 8
    position top
    height 16
    status_padding 0
    status_command i3status-rs
    colors {
        separator #666666
        background #222222
        statusline #dddddd
        focused_workspace #0088CC #0088CC #ffffff
        active_workspace #333333 #333333 #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace #2f343a #900000 #ffffff
    }
  }
}

include /etc/sway/config.d/*

# my stuff

# fix notebook hardware buttons
bindsym XF86MonBrightnessUp exec brightnessctl set +10%
bindsym XF86MonBrightnessDown exec brightnessctl set 10%-
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# [ ] start chrome in X11 mode for Japanese input to work. Stop all wayland chrome sessions before that.
bindsym $mod+c+j exec google-chrome
# [ ] or run chrome in Wayland mode
bindsym $mod+c exec google-chrome --enable-features=UseOzonePlatform --ozone-platform=wayland


# configure notebook touchscreen
set $builtin_display "eDP-1"
set $external_display "DP-1"
set $touch_input "1386:18575:Wacom_HID_488F_Finger"
input $touch_input map_to_output $builtin_display

# setup screen shotting
bindsym $mod+p       exec shotman --capture window --copy
bindsym $mod+Shift+p exec shotman --capture region --copy
bindsym $mod+Ctrl+p  exec shotman --capture output --copy

# run Japanese IME
exec fcitx5 -dr

# run bluetooth applet to be displayed in a bar tray
exec blueman-applet

# run notifyer
exec mako

# assign workspaces to outputs
workspace 1 output eDP-1
workspace 2 output DP-1
workspace 3 output DP-1
workspace 4 output DP-1
workspace 5 output DP-1

# assign apps to workspaces
assign [app_id="Alacritty"] workspace 1
assign [app_id="dev.zed.Zed"] workspace 2
assign [app_id="google-chrome"] workspace 2
assign [instance="discord"] workspace 3
assign [instance="spotify"] workspace 4

# start apps in assigned workspaces
exec zed

# This will run google-chrome in wayland mode, but the Japanese input with fcitx5 will not work,
# because google-chrome only supports wayland text-input-v1 and sway only supports text-input-v3
# exec google-chrome --enable-features=UseOzonePlatform --ozone-platform=wayland

# [ ] The workaround to input Japanese in google-chrome in sway is to run google-chrome in X11 mode:
# exec google-chrome

# [ ] this will switch chrome to wayland text-input-v1 but sway only supports text-input-v3, so it will not work:
# exec google-chrome --enable-features=UseOzonePlatform --ozone-platform=wayland --enable-wayland-ime

# [ ] this will allow Japanese input under sway, but will run chrome in X11 mode
exec google-chrome --enable-features=UseOzonePlatform --ozone-platform=wayland --wayland-text-input-version=3

# [ ] these flags are mutually exclusive, so would still run chrome in X11 mode
# exec google-chrome --enable-features=UseOzonePlatform --ozone-platform=wayland --enable-wayland-ime --wayland-text-input-version=3

exec alacritty
exec discord
exec spotify
